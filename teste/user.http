@token = eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOjEsImNwZiI6IjEyMzQ1Njc4OTEwIiwibmFtZSI6IkZlcm5hbmRvIiwiaWF0IjoxNzU5MjU5NzAzLCJleHAiOjE3NTkyODg1MDN9.x5MXsDs40Z72iUjN-UJPPhprG5zt2N_MLsSqfqLiGg4

### Criando um usuário o que esta dentro de chaves é um body ( chamado pelo controller por req.body)
POST http://localhost:3000/users HTTP/1.1
Content-Type: application/json

{
    "name":"Fernando",
    "lastName":"Coppi",
    "password":"123456",
    "cpf":"12345678910",
    "phone":"16994030052",
    "email":"educoppi8@gmail.com",
    "role":"PATIENT"
} 

### LOGIN
POST http://localhost:3000/users/login HTTP/1.1
Content-Type: application/json

{
    "senha":"123456",
    "cpf":"12345678910"
} 

### Ler todos os Usuários
GET http://localhost:3000/users HTTP/1.1
Content-Type: application/json


### Ler todos os Usuários que começam o nome eduardo (depois da interrogação temos a "query" ( chamado no controller por req.query))

GET http://localhost:3000/users?name=Eduardo HTTP/1.1 
Content-Type: application/json

### Ler todos os Usuários que começam o cpf

GET http://localhost:3000/users?cpf=12345678910 HTTP/1.1
Content-Type: application/json

### Ler um usuario pelo id (depois da ultima barra temos um "params" ( chamado no controller por req.params))

GET http://localhost:3000/users/1 HTTP/1.1
Content-Type: application/json

### Delete um usuario pelo id

DELETE http://localhost:3000/users/1 HTTP/1.1
Content-Type: application/json
Authorization: Bearer {{token}}

### Atualiza o usuario
PUT http://localhost:3000/users/4 HTTP/1.1
Content-Type: application/json
Authorization: Bearer {{token}}

{
    "name":"Eduardo",
    "lastName": "Coppiii",
    "phone":"16994066652"
}