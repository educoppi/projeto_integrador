@token = eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOjEsImNwZiI6IjEyMzQ2Nzg5MDEiLCJuYW1lIjoiUkVDRVBDSU9OSVNUIiwiZ3JvdXAiOlsiUkVDRVBDSU9OSVNUIl0sImlhdCI6MTc2MDAyOTI0NCwiZXhwIjoxNzcwMzk3MjQ0fQ.nOFXSgYIiO2zwJ3vdHxd1j_JlejyvW77tlrGQtD-B4Y

### Criando o usuario administrador
POST http://localhost:3000/users HTTP/1.1
Content-Type: application/json

{
    "name":"Eduardo",
    "lastName":"Coppi",
    "password":"123456",
    "cpf":"12345678906",
    "phone":"19888887777",
    "email":"eduardo.coppi@gmail.com",
    "group": {
        "connect": [{ "groupId": 1}]
    }
}

### LOGIN (MUDE A SENHA E O CPF)
POST http://localhost:3000/users/login HTTP/1.1
Content-Type: application/json

{
    "senha":"123456",
    "cpf":"1234678901"
} 

### Ler todos os Usuários
GET http://localhost:3000/users HTTP/1.1
Content-Type: application/json

### Ler todos os Usuários que começam o nome eduardo (depois da interrogação temos a "query" ( chamado no controller por req.query))

GET http://localhost:3000/users?name=Eduardo HTTP/1.1 
Content-Type: application/json

### Ler todos os Usuários que começam o cpf

GET http://localhost:3000/users?cpf=12345678910 HTTP/1.1
Content-Type: application/json

### Ler um usuario pelo id (depois da ultima barra temos um "params" ( chamado no controller por req.params))

GET http://localhost:3000/users/1 HTTP/1.1
Content-Type: application/json

### Delete um usuario pelo id

DELETE http://localhost:3000/users/2 HTTP/1.1
Content-Type: application/json
Authorization: Bearer {{token}}

### Atualiza o usuario
PUT http://localhost:3000/users/1 HTTP/1.1
Content-Type: application/json
Authorization: Bearer {{token}}

{
    "name":"Eduardo"
}

### Ler usuario atraves do login
GET http://localhost:3000/users/logado HTTP/1.1
Content-Type: application/json
Authorization: Bearer {{token}}